name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    # Specify exact Ubuntu version instead of 'latest'
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        # Use only modern, supported Python versions
        python-version: ['3.10', '3.11', '3.12']
      fail-fast: false
    steps:
      # Pin to specific version instead of major version
      - uses: actions/checkout@v4.1.1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '${{ matrix.python-version }}'
          allow-prereleases: false
          check-latest: false
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install pytest
      - name: Format code (black & isort)
        run: |
          # Run formatters first
          python -m black --line-length=100 .
          python -m isort --profile=black --line-length=100 .
          
      - name: Lint code (ruff)
        # Continue on error to allow the workflow to proceed even if linting fails
        continue-on-error: true
        run: |
          python -m ruff check --line-length=100 . || echo "Linting issues found - see output above"
      - name: Run tests
        run: pytest -q
      - name: Build Docker image
        run: docker build -t passive_liveness_api .
      - name: Scan Docker image for vulnerabilities
        # Pin to specific version instead of master
        uses: aquasecurity/trivy-action@0.14.0
        with:
          image-ref: 'passive_liveness_api:latest'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          ignore-unfixed: true
